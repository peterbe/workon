# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python and React

on:
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # - name: Configure sysctl limits
      #   run: |
      #     sudo swapoff -a
      #     sudo sysctl -w vm.swappiness=1
      #     sudo sysctl -w fs.file-max=262144
      #     sudo sysctl -w vm.max_map_count=262144

      # - uses: getong/elasticsearch-action@v1.2
      #   with:
      #     elasticsearch version: '7.7.0'
      #     host port: 9200
      #     container port: 9200
      #     host node port: 9300
      #     node port: 9300
      #     discovery type: 'single-node'

      # - name: Redis Server in GitHub Actions
      #   uses: supercharge/redis-github-action@1.1.0
      #   with:
      #     # Redis version to use
      #     redis-version: '5.0.5'

      - name: Setup PostgreSQL
        uses: Harmon758/postgresql-action@v1.0.0
        with:
          # Version of PostgreSQL to use
          postgresql version: '12'
          postgresql db: workon
          postgresql user: user
          postgresql password: secret

      - uses: actions/checkout@v2.3.4

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2.1.6
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.5
        with:
          node-version: '14'

      - name: Install yarn packages
        run: yarn --frozen-lockfile

      - name: Set up Python 3.8
        uses: actions/setup-python@v2.2.2
        with:
          python-version: '3.8'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip wheel --progress-bar off
          pip install -r requirements.txt --progress-bar off
      - name: Run Tests
        env:
          KINTO_STORAGE_URL: postgresql://user@secret:localhost/workon
          KINTO_CACHE_URL: postgresql://user@secret:localhost/workon
          KINTO_PERMISSION_URL: postgresql://user@secret:localhost/workon
        run: |
          yarn build
          kinto start --ini kinto.ini
      #     ./scripts/ci-test.sh
      # - name: Run Lints
      #   run: |
      #     ./scripts/ci-lint.sh
